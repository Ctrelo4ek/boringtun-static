name: Build and deploy multi-architecture binaries

on:
  push:
    tags:
      - "*"

env:
  TAG: "0.5.2"
  TARGETS: "aarch64-unknown-linux-gnu,aarch64-unknown-linux-musl,armv7-unknown-linux-gnueabihf,armv7-unknown-linux-musleabi,armv7-unknown-linux-musleabihf,x86_64-unknown-linux-gnu,x86_64-unknown-linux-musl,arm-unknown-linux-gnueabihf"

jobs:
  legacy:
    name: Build legacy kernel versions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Local
        uses: actions/checkout@v3
      - name: Make Cargo config available to other builds
        uses: actions/upload-artifact@v3
        with:
          name: config-append.toml
          path: config-append.toml
      - name: Install Earthly
        run: |
          sudo /bin/sh -c "wget https://github.com/earthly/earthly/releases/download/v0.6.30/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly"
      - name: Build artifacts using Earthly
        run: |
          earthly +all --TAG="$TAG"
      - name: Upload legacy kernel compilation artifact
        uses: actions/upload-artifact@v3
        with:
          name: boringtun-legacy-kernel.tar.xz
          path: dist/boringtun-legacy-kernel.tar.xz
  build:
    name: Build binaries using Cargo/Cross
    needs: legacy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout boringtun
        uses: actions/checkout@v3
        with:
          repository: cloudflare/boringtun
          ref: boringtun-cli-${{ env.TAG }}
      - name: Get Cargo config additions
        uses: actions/download-artifact@v3
        with:
          name: config-append.toml
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ env.TARGETS }}
      - name: Install Cross for Cargo
        run: |
          cargo install cross --git https://github.com/cross-rs/cross
      - name: Compile Binaries
        run: |
          cat config-append.toml >> ~/.cargo/config.toml

          mkdir -p dist

          for TARGET in ${TARGETS//,/ }
          do
            cross build --release --target=${TARGET}
            XZ_OPT=-9 tar -C target/${TARGET}/release -Jcvf dist/boringtun-cli-${TAG}-${TARGET}.tar.xz boringtun-cli
          done
      - name: Get legacy kernel compilation artifact
        uses: actions/download-artifact@v3
        with:
          name: boringtun-legacy-kernel.tar.xz
          path: dist/boringtun-legacy-kernel.tar.xz
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*

